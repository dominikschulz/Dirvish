# dirvish.pod
# 1.3.X series
# Copyright 2005 by the dirvish project
# http://www.dirvish.org
#
# Last Revision   : $Rev: 57 $
# Revision date   : $Date: 2005-10-02 03:40:37 +0200 (So, 02 Okt 2005) $
# Last Changed by : $Author: keithl $
# Stored as       : $HeadURL: http://www.dirvish.org/svn/dirvish_1_3_1/dirvish.pod $

=head1 NAME

dirvish - Disk based virtual image network backup system

=head1 SYNOPSIS

B<dirvish --vault> I<vault> [ I<OPTIONS> ]

=head1 DESCRIPTION

Create a backup image of a client directory tree.

Each image is a directory containing transfer B<log, summary, tree> and
if transfer errors were detected an B<rsync_error> file. The transfer
B<log> retains the the output of any pre and post processing commands
and the rsync log listing all files that were changed or added with
some statistical information. The B<summary> file contains all the
information about how the image was created and meta-data for managing
the image in config file format. Tree is the copy of the client tree.

The client directory tree is compared with an existing image to create
a new image. Unchanged files are shared between images. For changed
files only those parts that actually change are transfered over the
network. Unchanged portions of files are copied from the reference
image.

The resulting images contain complete copies of the original trees
preserving ownership and file permissions. In this way even though the
backups are made incrementally, each image can be used independently
for restores or to make removable-media off-site copies or archives.

The removal of an image will have no effect on other images.

=head1 OPTIONS

Each option on the command line may be specified any number of times.
Those options that support lists in the config files will accumulate
all of their arguments otherwise each specification will override the
ones before.

As configuration files are loaded they may override options on the
command line.

Each option may be unambiguously abbreviated.

B<--branch> [I<vault:>]I<branch_name>

Specify a branch to use.

A branch is a sequence of images.

If a vault has been specified either here or with B<--vault> the first
time this option is used it will attempt to load the config file
I<branch_name> or I<branch_name>B<.conf> from the vault.

B<--config> I<config-file>

Load options from the specified file.

If this precedes B<--vault> the B<--vault> option will not load its
own config file.

If vault has been set and I<config-file> is a bare filename the
presence of one in the vault will take precedence over one in the
current directory. To specify one in the current directory after
B<--vault> use B<./> to precede the name.

The master configuration file will be read prior to processing options.

B<--expire> I<expire_date>

Specify a time for the image to expire.

See B<Time::ParseDate(3pm)> for details.

This does not actually expire anything. What it does do is add an
B<Expire:> field to the image summary file containing an absolute time
so that a B<dirvish-expire> or another tool outside of dirvish can
decide when to remove old images.

B<--image> I<image_name>

Specify a name for the image.

I<image_name> is passed through B<POSIX::strftime>

See B<strftime(3)> for details.

B<--image-time> I<parsedate_expression>

Time to use when creating the image name.

If an absolute time without a date is provided it will be forced into
the past. If this isn't set the current time will be used.

See B<Time::ParseDate(3pm)> for details.

B<--init>

Create an initial image.

Create the image entirely from the source tree without the use of a
reference image.

B<--no-run>

B<--dry-run>

Don't actually do anything.

Process all configuration files, options and tests then produce a
summary/configuration file on standard output and exit.

B<--reference> I<branch_name>|I<image_name>

Specify an existing image or a branch from which to create the new
image.

If a branch_name is specified, the last existing image from its history
file will be used. A branch will take precedence over an image of the
same name.

B<--reset> I<option>

Reset the values in an accumulating I<option>.  Strings will be reset
to <undef>, lists will be emptied. 

B<--reset default> will reset I<all> options to the initial conditions
before the main configuration directory (typically
I</etc/dirvish/master.conf>) was read.  This is useful for overriding
the I<master.conf> file with a B<--config> file.

B<--summary> I<short>|I<long>

Specify summary format.

A short summary will only include final used values. A long summary
will include all configuration values.

Default value: B<short>

B<--vault> I<vault>[I<:branch_name>]

Specify the vault to store the image in.

If not preceded by B<--config> this will attempt to load the config
file B<default> or B<default.conf> within the I<vault>.

If I<branch_name> is specified here this will behave exactly like the
B<--branch> option and I<branch_name> or I<branch_name>.conf will be
attempted instead of B<default.conf>.

B<--version>

Print version string and exit.

B<--help> 

Print usage and exit.

B<--client>
B<--tree>
B<--exclude>
B<--sparse>
B<--zxfer>
B<--checksum>
B<--whole-file>
B<--xdev>
B<--speed-limit>
B<--file-exclude>
B<--index>

See the corresponding entries in B<dirvish.conf(5)>

=head1 EXIT CODES

To facilitate further automation and integration of B<dirvish> with
other tools B<dirvish> provides rationalized exit codes. The exit codes
are range based. While the code for a specific error may change from
one version to another it will remain within the specified range. So
don't test for specific exit codes but instead test for a range of
values. To the degree possible higher value ranges indicate more severe
errors.

=over 10

=item B<0>

success

=item B<1-19>

The backup job reported warnings.

=item B<20-39>

An error occurred during index generation and cleanup.

=item B<40-49>

A post-client or post-server command could not be run.

=item B<50-59>

The post-client command reported an error. Its exit code modulo 10 is added to 50

=item B<60-69>

The post-server command reported an error.  Its exit code modulo 10 is added to 60

=item B<70-79>

A post-client or post-server command could not be run.

=item B<80-89>

The pre-server command reported an error.  Its exit code modulo 10 is added to 80

=item B<90-99>

The pre-server command reported an error.  Its exit code modulo 10 is added to 90

=item B<100-149>

Rsync encountered a non-fatal error.

=item B<150-199>

Rsync encountered a fatal error.

=item B<200-219>

An error was encountered in loading a configuration file.

=item B<220-254>

An error was detected in the configuration.

=item B<255>

Incorrect usage.

=back


=head1 FILES

B</etc/dirvish/master.conf>

alternate master configuration file.

B</etc/dirvish.conf>

master configuration file.

B</etc/dirvish/>I<client>B<[.conf]>

client configuration file.

I<bank/vault/>B<dirvish/default[.conf]>

default vault configuration file.

I<bank/vault/>B<dirvish>I</branch>B<[.conf]>

branch configuration file.

I<bank/vault/>B<dirvish>I</branch>B<.hist>

branch history file.

I<bank/vault/image/>B<summary>

image creation summary.

I<bank/vault/image/>B<log>

image creation log.

I<bank/vault/image/>B<tree>

actual image of source directory tree.

I<bank/vault/image/>B<rsync_error>

Error output from rsync if errors or warnings were detected.

=head1 SEE ALSO

 dirvish.conf(5)
 dirvish-runall(8)
 dirvish-expire(8)
 dirvish-locate(8)
 ssh(1)
 rsync(1)
 Time::ParseDate(3pm)
 strftime(3)

=head1 AUTHOR

Dirvish was created by J.W. Schultz of Pegasystems Technologies.

Dirvish is now maintained by Keith Lofstrom at www.dirvish.org , with
the able assistance of many others.

=head1 BUGS AND ISSUES

Fields set in configuration files will override command line options
that have been set before the file is read. This behavior while
consistent may occasionally confuse. For this reason most command line
options should be specified after any options that may cause a
configuration file to be loaded.

In order to preserve permissions it is necessary for dirvish to run as
root on the backup server.

The root user must have non-interactive ssh access to the client
systems. It is not necessary that this access be as the root user on
the client.

File ownership is preserved using numeric values so it is not necessary
to have user accounts on the backup server. Making the vaults network
accessible using protocols that map UIDs based on names instead of
number could allow access controls on files to be violated.

Making the vaults writable by users will compromise the integrity of
the backups. Therefore any access to the vaults by users should be done
through a read-only mount.

=cut

